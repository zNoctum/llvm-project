//===-- B3Subtarget.h - SPIR-V Subtarget Information --------*- C++ -*--===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the SPIR-V specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_B3_B3SUBTARGET_H
#define LLVM_LIB_TARGET_B3_B3SUBTARGET_H

#include "B3CallLowering.h"
#include "B3LegalizerInfo.h"
#include "B3FrameLowering.h"
#include "B3ISelLowering.h"
#include "B3InstrInfo.h"
#include "llvm/ADT/SmallSet.h"
#include "llvm/CodeGen/GlobalISel/CallLowering.h"
#include "llvm/CodeGen/GlobalISel/InstructionSelector.h"
#include "llvm/CodeGen/GlobalISel/LegalizerInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"
#include "llvm/TargetParser/Triple.h"

#define GET_SUBTARGETINFO_HEADER
#include "B3GenSubtargetInfo.inc"

#include "llvm/CodeGen/RDFGraph.h"

namespace llvm {
class StringRef;

class B3TargetMachine;

class B3Subtarget : public B3GenSubtargetInfo {
private:
  B3InstrInfo InstrInfo;
  B3FrameLowering FrameLowering;
  B3TargetLowering TLInfo;

  // GlobalISel related APIs.
  std::unique_ptr<CallLowering> CallLoweringInfo;
  std::unique_ptr<InstructionSelector> InstSelector;
  std::unique_ptr<RegisterBankInfo> RegBankInfo;
  std::unique_ptr<B3LegalizerInfo> LegalizerInfo;

public:
  // This constructor initializes the data members to match that
  // of the specified triple.
  B3Subtarget(const Triple &TT, const std::string &CPU,
                 const std::string &FS, const B3TargetMachine &TM);
  B3Subtarget &initSubtargetDependencies(StringRef CPU, StringRef FS);

  // Parses features string setting specified subtarget options.
  // The definition of this function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);
  unsigned getPointerSize() const { return 64; }
  bool canDirectlyComparePointers() const;

  const CallLowering *getCallLowering() const override;
  const B3InstrInfo *getInstrInfo() const override;
  const B3FrameLowering *getFrameLowering() const override;
  const B3TargetLowering *getTargetLowering() const override;
  const B3RegisterInfo *getRegisterInfo() const override;
  InstructionSelector *getInstructionSelector() const override;
  const B3LegalizerInfo *getLegalizerInfo() const override;
  const RegisterBankInfo *getRegBankInfo() const override;
};
} // namespace llvm

#endif // LLVM_LLVM_LIB_TARGET_B3_B3SUBTARGET_H